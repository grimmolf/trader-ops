[project]
name = "trader-ops"
version = "0.1.0"
description = "Cross-Platform Trading Dashboard with real-time data, TradingView charts, and automated execution"
authors = [
    {name = "Trader", email = "trader@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11,<3.13"
keywords = ["trading", "dashboard", "fastapi", "electron", "tradingview", "real-time", "market-data"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry", 
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "websockets>=12.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "httpx>=0.25.2",
    "python-dotenv>=1.0.0",
    "ccxt>=4.1.0",
    "pandas>=2.1.4",
    "numpy>=1.25.2",
    "pyportfolioopt>=1.5.5",
    "quantstats>=0.0.62",
    "aiofiles>=23.2.1",
    "python-multipart>=0.0.6",
    "flask>=3.0.0",
    "pyyaml>=6.0.1",
    "redis>=5.0.1",
    "sqlalchemy>=2.0.23",
    "alembic>=1.13.0",
    # Security and credential management
    "cryptography>=41.0.0",
    "keyring>=24.0.0",
    "SecretStorage>=3.3.0; sys_platform == 'linux'",
    "pre-commit>=4.2.0",
]

[dependency-groups]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.6",
    "mypy>=1.7.1",
    "black>=23.11.0",
    "isort>=5.12.0",
    "playwright>=1.40.0",
    "httpx>=0.25.2",
]
lean = [
    # QuantConnect LEAN integration for backtesting
    # Note: Install LEAN manually when needed: pip install quantconnect-lean
    # "quantconnect-lean @ git+https://github.com/QuantConnect/Lean.git#subdirectory=Algorithm.Python"
]

[project.urls]
"Homepage" = "https://github.com/grimmolf/trader-ops"
"Bug Reports" = "https://github.com/grimmolf/trader-ops/issues"
"Source" = "https://github.com/grimmolf/trader-ops"
"Documentation" = "https://github.com/grimmolf/trader-ops/tree/main/docs"

[tool.ruff]
target-version = "py311"
line-length = 88
select = ["E", "F", "W", "C90", "I", "N", "UP", "YTT", "S", "BLE", "FBT", "B", "A", "COM", "C4", "DTZ", "T10", "EM", "EXE", "FA", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "TD", "PD", "PGH", "PL", "TRY", "FLY", "NPY", "PERF", "RUF"]
ignore = ["S101", "S608", "PLR0913", "PLR0912", "PLR0915"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "PLR2004", "SLF001"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["ccxt.*", "quantstats.*", "pyportfolioopt.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests"
]

[tool.coverage.run]
source = ["src/backend", "src/automation"]
omit = ["tests/*", "*/migrations/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]
